length.weight <- function(data, a, b, ...) {
eggcarton <- length(data)
modeled.weight <- vector(length = eggcarton)
for (i in 1:eggcarton) { #store values in entire length vector
modeled.weight[i] <- (a*(data[i]^b))/1000 # divide by 1000 since initial output was HUGE
}
cat("length(cm)", data, "\n", "weight(kg)", modeled.weight)
}
length.weight(data = roughy$length.cm, a = roughy$a.parameter, b = roughy$b.parameter)
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", Von.Bert.growth, fill = T, "modeled length(cm)")
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
?round
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", round(Von.Bert.growth, digits = 2), fill = T, "modeled length(cm)")
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", "modeled length(cm)", round(Von.Bert.growth, digits = 2), )
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", "modeled length(cm)", round(Von.Bert.growth, digits = 2))
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", "modeled length(cm)", Von.Bert.growth)
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
total.weight <- function(data, ...){
eggcarton <- length(data$Age)
biomass.perAge <- vector(eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
print("biomass per age")
cat(data$Age, "\n", biomass.perAge)
print("total biomass")
return(sum(biomass.perAge))
}
total.weight(data=dummy.stock1)
dummy.stock1 <- data.frame(
Age = seq(1:7),
catch.perAge = c(1000,800,700,500,450,300,100),
wt.perAge.g = c(100,400,650,800,900,960,1000)
)
dummy.stock1
total.weight(data=dummy.stock1)
total.weight <- function(data, ...){
eggcarton <- length(data)
biomass.perAge <- vector(eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
print("biomass per age")
cat(data$Age, "\n", biomass.perAge)
print("total biomass")
return(sum(biomass.perAge))
}
total.weight(data=dummy.stock1)
total.weight <- function(data, ...){
eggcarton <- length(data$Age)
biomass.perAge <- vector(eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
print("biomass per age")
cat(data$Age, "\n", biomass.perAge)
print("total biomass")
return(sum(biomass.perAge))
}
?seq
x <- seq(1:10)
mode(x)
total.weight <- function(data, ...){
eggcarton <- length(data$Age)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
print("biomass per age")
cat(data$Age, "\n", biomass.perAge)
print("total biomass")
return(sum(biomass.perAge))
}
total.weight(data=dummy.stock1)
total.weight <- function(data, ...){
eggcarton <- length(data$Age)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
cat("age class", data$Age, "\n", "biomass per age", biomass.perAge, "\n", '\n', "total biomass", "\n", sum(biomass.perAge))
# print("total biomass")
# return(sum(biomass.perAge))
}
total.weight(data=dummy.stock1)
View(dummy.stock1)
# Name: Andrew Chin
# Homework 1
setwd("~/UW AU19/FISH 552_3/FISH.552_workspace/553_HW1")
#==Question 1
caption <- function(label,coord,...) {
fix.region <- par("usr") #par() indicates plotting region; is a vector
xCoord <- fix.region[1]+coord[1]*diff(fix.region[1:2])
yCoord <- fix.region[3]+coord[2]*diff(fix.region[3:4])
text(x=xCoord,y=yCoord,label=label,...)
}
plot(1,1)
caption(label = "(a)", coord=c(.05,.95))
#==Question 2a
# CL.theorem <- function(n, mean, sd, breaks, ...) {
#    set.seed(420)
#    rando <- rnorm(n=n, mean=mean, sd=sd)
#    rsample <- sample(rando, size = n)
#    plot(hist(rsample, breaks = breaks))
#    print(mean(rsample))
# }
CL.theorem <- function(n, mean, sd, breaks, ...) {
set.seed(420)
for (i in n) {
rando <- rnorm(n=i, mean=mean, sd=sd)
rsample <- sample(rando, size = i)
plot(hist(rsample, breaks = breaks))
print(mean(rsample))
}
}
Nrandom <- data.frame(N = c(5,10,20,30,50,100,500,1000,5000,10000))
Nrandom
pdf(file = "HW1_Q2b.pdf", paper = "letter")
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
Nrandom <- vector(x = c(5,10,20,30,50,100,500,1000,5000,10000))
Nrandom
pdf(file = "HW1_Q2b.pdf", paper = "letter")
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
pdf(file = "HW1_Q2b.pdf", paper = "letter")
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
?matrix
CL.theorem <- function(n, mean, sd, breaks, ...) {
set.seed(420)
for (i in n) {
rando <- rnorm(n=n[i], mean=mean, sd=sd)
rsample <- sample(rando, size = i)
plot(hist(rsample, breaks = breaks))
print(mean(rsample))
}
}
Nrandom <- vector(x = c(5,10,20,30,50,100,500,1000,5000,10000))
Nrandom
View(Nrandom)
pdf(file = "HW1_Q2b.pdf", paper = "letter")
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
?data.frame
Nrandom <- data.frame(c(5,10,20,30,50,100,500,1000,5000,10000))
View(Nrandom)
Nrandom <- data.frame(N = c(5,10,20,30,50,100,500,1000,5000,10000))
View(Nrandom)
Nrandom
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
?vector
#==Question 2b
Nrandom <- vector(x = c(5,10,20,30,50,100,500,1000,5000,10000))
#==Question 2b
Nrandom <- c(5,10,20,30,50,100,500,1000,5000,10000)
Nrandom
pdf(file = "HW1_Q2b.pdf", paper = "letter")
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
CL.theorem <- function(n, mean, sd, breaks, ...) {
set.seed(420)
for (i in n) {
rando <- rnorm(n=i, mean=mean, sd=sd)
rsample <- sample(rando, size = i)
plot(hist(rsample, breaks = breaks))
print(mean(rsample))
}
}
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
pdf(file = "HW1_Q2b.pdf", paper = "letter")
CL.theorem(n=Nrandom,
mean = 50,
sd = 2,
breaks = 5)
dev.off()
weight.from.age <- function(age, abundance, a, b, K, Linf, age0, ...) {
# length @ age
lengthFromAge <- vector(length = length(age))
for (i in age) {
lengthFromAge[i] <- Linf*(1-exp(-K*(i-age0)))
}
print("length from age")
return(lengthFromAge)
# weight @ age
modeled.weight <- vector(length = length(lengthFromAge))
for (j in lengthFromAge) {
modeled.weight[j] <- (a*(j^b))/1000
}
print("length from modeled weight")
return(modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = length(modeled.weight))
for (p in modeled.weight) {
biomass.perAge[p] <- (data[data$age==i,] * modeled.weight[p])
}
return(biomass.perAge)
return(sum(biomass.perAge))
}
weight.from.age(age = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
weight.from.age <- function(age, abundance, a, b, K, Linf, age0, ...) {
# length @ age
eggcarton <- length(age)
lengthFromAge <- vector(length = eggcarton)
for (i in eggcarton) {
lengthFromAge[i] <- Linf*(1-exp(-K*(i-age0)))
}
print("length from age")
return(lengthFromAge)
# weight @ age
modeled.weight <- vector(length = eggcarton)
for (i in eggcarton) {
modeled.weight[i] <- (a*(lengthfromAge[i]^b))/1000
}
print("length from modeled weight")
return(modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = eggcarton)
for (i in eggcarton) {
biomass.perAge[i] <- (data[data$age==i,] * modeled.weight[i])
}
return(biomass.perAge)
return(sum(biomass.perAge))
}
weight.from.age(age = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
weight.from.age <- function(age, abundance, a, b, K, Linf, age0, ...) {
# length @ age
eggcarton <- length(age)
lengthFromAge <- vector(length = eggcarton)
for (i in eggcarton) {
lengthFromAge[i] <- Linf*(1-exp(-K*(age[i]-age0)))
}
print("length from age")
return(lengthFromAge)
# weight @ age
modeled.weight <- vector(length = eggcarton)
for (i in eggcarton) {
modeled.weight[i] <- (a*(lengthfromAge[i]^b))/1000
}
print("length from modeled weight")
return(modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = eggcarton)
for (i in eggcarton) {
biomass.perAge[i] <- (data[data$age==i,] * modeled.weight[i])
}
return(biomass.perAge)
return(sum(biomass.perAge))
}
weight.from.age(age = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
total.weight <- function(data, ...){
eggcarton <- length(data$Age)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
cat("age class", data$Age, "\n", "biomass per age", biomass.perAge, "\n", '\n', "total biomass", "\n", sum(biomass.perAge))
}
total.weight(data=dummy.stock1)
length(assessment2$age)
weight.from.age <- function(age, abundance, a, b, K, Linf, age0, ...) {
# length @ age
eggcarton <- length(age)
lengthFromAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
lengthFromAge[i] <- Linf*(1-exp(-K*(age[i]-age0)))
}
cat("length from age", lengthFromAge)
# weight @ age
modeled.weight <- vector(length = eggcarton)
for (i in 1:eggcarton) {
modeled.weight[i] <- (a*(lengthfromAge[i]^b))/1000
}
cat("length from modeled weight", modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$age==i,] * modeled.weight[i])
}
cat("biomass per age class", biomass.perAge, "\n", "\n", "total biomass", "\n", sum(biomass.perAge))
}
weight.from.age(age = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", "modeled length(cm)", Von.Bert.growth)
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
weight.from.age <- function(ages, abundance, a, b, K, Linf, age0, ...) {
# length @ age
eggcarton <- length(ages)
lengthFromAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
lengthFromAge[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("length from age", lengthFromAge)
# weight @ age
modeled.weight <- vector(length = eggcarton)
for (i in 1:eggcarton) {
modeled.weight[i] <- (a*(lengthfromAge[i]^b))/1000
}
cat("length from modeled weight", modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (ages[i] * modeled.weight[i])
}
cat("biomass per age class", biomass.perAge, "\n", "\n", "total biomass", "\n", sum(biomass.perAge))
}
weight.from.age(ages = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
# Name: Andrew Chin
# Homework 2
#==Question 1a
# length-weight equation: W(i) = a*L(i)^b
length.weight <- function(data, a, b, ...) {
eggcarton <- length(data)
modeled.weight <- vector(length = eggcarton)
for (i in 1:eggcarton) { #store values in entire length vector
modeled.weight[i] <- (a*(data[i]^b))/1000 # divide by 1000 since initial output was HUGE
}
cat("length(cm)", data, "\n", "weight(kg)", modeled.weight)
}
# old function
# Oldlength.weight <- function(data, a, b, ...) {
#    for (i in data) {
#       modeled.weight <- (a*(i^b))/1000 # divide by 1000 since initial output was HUGE
#    cat(i, modeled.weight, "\n")
#    }
# }
#orange roughy
roughy.length <- c(20,25,30,35,40)
roughy.age <- c(5,10,20,50,100)
roughy.a <- 0.0631
roughy.b <- 2.81
roughy.descrip <- "Orange roughy (Hoplostethus atlanticus) data; length (cm), age, a.parameter, b.parameter, age, K  = growth rate, Linf.cm = asymptotic max length (cm), l.age0 = length at age 0"
roughy <- list(meta=roughy.descrip,
length.cm=roughy.length,
a.parameter=roughy.a, b.parameter=roughy.b,
age=roughy.age,
K=0.04, Linf.cm=40, L.age0=-2.7)
roughy
length.weight(data = roughy$length.cm, a = roughy$a.parameter, b = roughy$b.parameter)
age.length <- function(ages, K, Linf, age0, ...) {
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", "modeled length(cm)", Von.Bert.growth)
}
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
dummy.stock1 <- data.frame(
Age = seq(1:7),
catch.perAge = c(1000,800,700,500,450,300,100),
wt.perAge.g = c(100,400,650,800,900,960,1000)
)
dummy.stock1
total.weight <- function(data, ...){
eggcarton <- length(data$Age)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (data[data$Age==i,]$catch.perAge *
data[data$Age==i,]$wt.perAge.g)
}
cat("age class", data$Age, "\n", "biomass per age", biomass.perAge, "\n", '\n', "total biomass", "\n", sum(biomass.perAge))
}
total.weight(data=dummy.stock1)
assessment2 <- data.frame(age = seq(1:10), abundance = c(100,90,81,70,65,60,30,20,10,5))
assessment2
dummy.stock2 <- list(meta="dummy data for Question 2; age, abundance/age, 'A' growth parameter, 'B' growth parameter, K  = growth rate, Linf.cm = asymptotic max length (cm), l.age0 = length at age 0",
assessment=assessment2,
a.parameter=roughy.a, b.parameter=roughy.b,
K=0.04, Linf.cm=40, L.age0=-2.7)
dummy.stock2
View(assessment2)
length(dummy.stock2$assessment)
length(assessment2$age)
weight.from.age <- function(ages, abundance, a, b, K, Linf, age0, ...) {
# length @ age
eggcarton <- length(ages)
lengthFromAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
lengthFromAge[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
# Error in lengthFromAge[i] <- Linf * (1 - exp(-K * (i - age0))) :  replacement has length zero
}
cat("length from age", lengthFromAge)
# weight @ age
modeled.weight <- vector(length = eggcarton)
for (i in 1:eggcarton) {
modeled.weight[i] <- (a*(lengthfromAge[i]^b))/1000
}
cat("length from modeled weight", modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (abundance[i] * modeled.weight[i])
}
cat("biomass per age class", biomass.perAge, "\n", "\n", "total biomass", "\n", sum(biomass.perAge))
}
weight.from.age(ages = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
egg <- length(assessment2$age)
egg
mode(egg)
age.length(ages = roughy$age, K = roughy$K, Linf = roughy$Linf.cm, age0 = roughy$L.age0)
weight.from.age <- function(ages, abundance, a, b, K, Linf, age0, ...) {
# length @ age
eggcarton <- length(ages)
Von.Bert.growth <- vector(length = eggcarton)
for (i in 1:eggcarton) {
Von.Bert.growth[i] <- Linf*(1-exp(-K*(ages[i]-age0)))
}
cat("ages", ages, "\n", "modeled length(cm)", Von.Bert.growth)
# Error in lengthFromAge[i] <- Linf * (1 - exp(-K * (i - age0))) :  replacement has length zero
# cat("length from age", lengthFromAge)
# weight @ age
modeled.weight <- vector(length = eggcarton)
for (i in 1:eggcarton) {
modeled.weight[i] <- (a*(lengthfromAge[i]^b))/1000
}
cat("length from modeled weight", modeled.weight)
# biomass per age, summed
# Total Weight = sum(# of fish@age a * weight@age a)
biomass.perAge <- vector(length = eggcarton)
for (i in 1:eggcarton) {
biomass.perAge[i] <- (abundance[i] * modeled.weight[i])
}
cat("biomass per age class", biomass.perAge, "\n", "\n", "total biomass", "\n", sum(biomass.perAge))
}
weight.from.age(ages = assessment2$age, abundance = assessment2$abundance, a = dummy.stock2$a.parameter, b = dummy.stock2$b.parameter, K = dummy.stock2$K, Linf = dummy.stock2$Linf.cm, age0 = dummy.stock2$age0)
duh <- vector(length = egg)
duh
length(duh)
